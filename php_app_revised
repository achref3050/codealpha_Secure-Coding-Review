<?php

require_once('../_helpers/strip.php');
session_start();

// Assuming $current_user_id contains the ID of the currently authenticated user
$current_user_id = $_SESSION['user_id'];

$db = new SQLite3('test.db');

$id = filter_input(INPUT_GET, 'id', FILTER_VALIDATE_INT);

if ($id) {
    // Prepared statement to prevent SQL injection
    $stmt = $db->prepare('SELECT * FROM secrets WHERE id = :id AND user_id = :user_id');
    $stmt->bindValue(':id', $id, SQLITE3_INTEGER);
    $stmt->bindValue(':user_id', $current_user_id, SQLITE3_INTEGER);
    $result = $stmt->execute();
    
    // Display the secret if authorized
    while ($row = $result->fetchArray()) {
        echo 'Secret: ' . htmlspecialchars($row['secret'], ENT_QUOTES, 'UTF-8') . '<br />';
    }

    echo '<br /><br /><a href="/">Go back</a>';

} else {
    // Display all secrets for the authenticated user
    $stmt = $db->prepare('SELECT * FROM secrets WHERE user_id = :user_id');
    $stmt->bindValue(':user_id', $current_user_id, SQLITE3_INTEGER);
    $result = $stmt->execute();
    
    echo '<strong>Your secrets</strong><br /><br />';
    while ($row = $result->fetchArray()) {
        echo '<a href="/?id=' . htmlspecialchars($row['id'], ENT_QUOTES, 'UTF-8') . '">#' . htmlspecialchars($row['id'], ENT_QUOTES, 'UTF-8') . '</a><br />';
    }

    echo '<br /><br /><a href="/">Go back</a>';
}
?>
